(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{132:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return p})),n.d(t,"default",(function(){return l}));var a=n(1),r=n(9),o=(n(0),n(143)),i={id:"setup",title:"Setup",sidebar_label:"Setup"},c={id:"setup",title:"Setup",description:"**This project is a proof of concept and not recommended as Production ready code!**",source:"@site/docs/setup.md",permalink:"/docs/setup",editUrl:"https://github.com/jembi/openhim-mediator-mapping/edit/master/docs/docs/setup.md",sidebar_label:"Setup",sidebar:"someSidebar",next:{title:"Endpoints",permalink:"/docs/endpoints"}},p=[{value:"NodeJS and NPM",id:"nodejs-and-npm",children:[]},{value:"Docker",id:"docker",children:[]},{value:"Environment Variables",id:"environment-variables",children:[]}],b={rightToc:p};function l(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},b,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"This project is a proof of concept and not recommended as Production ready code!")),Object(o.b)("p",null,"The Mapping mediator can be setup within a ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://nodejs.org/en/"}),"NodeJS")," environment along with ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://www.npmjs.com/"}),"NPM")," or with ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://docs.docker.com/"}),"Docker"),". In either case it is configured using environment variables."),Object(o.b)("h2",{id:"nodejs-and-npm"},"NodeJS and NPM"),Object(o.b)("p",null,"This project was developed using ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://scotch.io/tutorials/whats-new-in-node-10-dubnium"}),"Dubnium")," NodeJS."),Object(o.b)("p",null,"To start up the project navigate into the root of the project in a terminal and run the following:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-sh"}),"npm install\n\n<Environment_Variables> npm start\n")),Object(o.b)("p",null,"Once the mediator has successfully started up you can test it by sending a POST request directly to your configured endpoints on the mediator."),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),'curl --request POST --header "Content-Type: application/json" --data \'{"key1":"value1", "key2":"value2"}\' http://localhost:3003/<path_configured_in_meta.json>\n')),Object(o.b)("p",null,"Or you could setup channels on your OpenHIM instance corresponding to your endpoints and send requests through to the OpenHIM to track the transaction there. See ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/jembi/openhim-mediator-tutorial/blob/master/0_Starting_OpenHIM.md#step-5---testing-the-openhim-routing"}),"here")," for a quick OpenHIM tutorial."),Object(o.b)("hr",null),Object(o.b)("h2",{id:"docker"},"Docker"),Object(o.b)("p",null,"From the project directory run:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-sh"}),"docker build -t mapper .\n\ndocker run --network {network-name} -v /endpoints:/endpoints -p 3003:3003 --name mapper mapper\n")),Object(o.b)("p",null,"The network flag is optional. If connecting to a specific docker network find the network name by running:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-sh"}),"docker network ls\n")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Environmental variables")," can be included using the ",Object(o.b)("inlineCode",{parentName:"p"},"-e")," flag. For example:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-sh"}),"docker run --network {network-name} -p 3003:3003 --name mapper -e TRUST_SELF_SIGNED=true mapper\n")),Object(o.b)("p",null,"If a new endpoint is added to the endpoints folder, the docker container will have to be restarted:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-sh"}),"docker restart mapper\n")),Object(o.b)("hr",null),Object(o.b)("h2",{id:"environment-variables"},"Environment Variables"),Object(o.b)("p",null,"The supported environment variables are listed as follows:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},"SERVER_PORT - Default: ",Object(o.b)("strong",{parentName:"p"},"3003"))),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},"LOG_LEVEL - Default: ",Object(o.b)("strong",{parentName:"p"},"info"))),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},"OPENHIM_URL - Default: ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://localhost:8080"}),"https://localhost:8080")),Object(o.b)("blockquote",{parentName:"li"},Object(o.b)("p",{parentName:"blockquote"},"If running the OpenHIM in a docker container substitute in the ",Object(o.b)("strong",{parentName:"p"},"container name")," instead of ",Object(o.b)("strong",{parentName:"p"},"localhost"),"."))),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},"OPENHIM_USERNAME - Default: ",Object(o.b)("strong",{parentName:"p"},"root@openhim.org"))),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},"OPENHIM_PASSWORD - Default: ",Object(o.b)("strong",{parentName:"p"},"openhim-password")),Object(o.b)("blockquote",{parentName:"li"},Object(o.b)("p",{parentName:"blockquote"},"The OpenHIM requires this default API password to be changed on first login."))),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},"TRUST_SELF_SIGNED - Default: ",Object(o.b)("strong",{parentName:"p"},"false")),Object(o.b)("blockquote",{parentName:"li"},Object(o.b)("p",{parentName:"blockquote"},"Only set this variable to ",Object(o.b)("inlineCode",{parentName:"p"},"true")," if you are using it in a non-production environment"))),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},"OPENHIM_REGISTER - Default: ",Object(o.b)("strong",{parentName:"p"},"true")),Object(o.b)("blockquote",{parentName:"li"},Object(o.b)("p",{parentName:"blockquote"},"Set to ",Object(o.b)("strong",{parentName:"p"},"false")," if you do not wish to have this mediator register itself with the openhim instance"))),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},"PARSER_LIMIT - Default: ",Object(o.b)("strong",{parentName:"p"},"1mb")),Object(o.b)("blockquote",{parentName:"li"},Object(o.b)("p",{parentName:"blockquote"},"Define the incoming body limit size. If the incoming body is bigger than the specified limit, the validation will fail"))),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},"PARSER_XML_OPTIONS_TRIM - Default: ",Object(o.b)("strong",{parentName:"p"},"true")),Object(o.b)("blockquote",{parentName:"li"},Object(o.b)("p",{parentName:"blockquote"},"Trim the whitespace at the beginning and end of text nodes"))),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},"PARSER_XML_OPTIONS_EXPLICIT_ROOT - Default: ",Object(o.b)("strong",{parentName:"p"},"false")),Object(o.b)("blockquote",{parentName:"li"},Object(o.b)("p",{parentName:"blockquote"},"Set this if you want to get the root node in the resulting object"))),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},"PARSER_XML_OPTIONS_EXPLICIT_ARRAY - Default: ",Object(o.b)("strong",{parentName:"p"},"false")),Object(o.b)("blockquote",{parentName:"li"},Object(o.b)("p",{parentName:"blockquote"},"Always put child nodes in an array if true; otherwise an array is created only if there is more than one"))),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},"VALIDATION_ACCEPT_NULL_VALUES - Default: ",Object(o.b)("strong",{parentName:"p"},"true")),Object(o.b)("blockquote",{parentName:"li"},Object(o.b)("p",{parentName:"blockquote"},"This is used to configure the validation middleware to accept ",Object(o.b)("inlineCode",{parentName:"p"},"null")," values"))),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},"VALIDATION_COERCE_TYPES - Default: ",Object(o.b)("strong",{parentName:"p"},"false")),Object(o.b)("blockquote",{parentName:"li"},Object(o.b)("p",{parentName:"blockquote"},"Allow the validation middleware to coerce the incoming data values into the defined validation type. If the property validation type is defined as ",Object(o.b)("inlineCode",{parentName:"p"},"number")," and the value being supplied is a ",Object(o.b)("inlineCode",{parentName:"p"},"string"),", then the validation middleware will format the value into a ",Object(o.b)("inlineCode",{parentName:"p"},"number"))))))}l.isMDXComponent=!0},143:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return d}));var a=n(0),r=n.n(a);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var b=r.a.createContext({}),l=function(e){var t=r.a.useContext(b),n=t;return e&&(n="function"==typeof e?e(t):c({},t,{},e)),n},u=function(e){var t=l(e.components);return r.a.createElement(b.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},m=Object(a.forwardRef)((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,b=p(e,["components","mdxType","originalType","parentName"]),u=l(n),m=a,d=u["".concat(i,".").concat(m)]||u[m]||s[m]||o;return n?r.a.createElement(d,c({ref:t},b,{components:n})):r.a.createElement(d,c({ref:t},b))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var b=2;b<o;b++)i[b]=n[b];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);