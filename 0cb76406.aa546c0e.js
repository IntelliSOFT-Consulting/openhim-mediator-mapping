(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{124:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"metadata",(function(){return m})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return u}));var a=n(1),i=n(9),o=(n(0),n(143)),r=n(159),s=n(160),p=n(154),l={id:"bahmni-fhir-transform",title:"Bahmni to FHIR transformation",sidebar_label:"Bahmni to FHIR transformation"},m={id:"samples/bahmni-fhir-transform",title:"Bahmni to FHIR transformation",description:"import Tabs from '@theme/Tabs';",source:"@site/docs/samples/bahmni-fhir-transform.md",permalink:"/openhim-mediator-mapping/docs/samples/bahmni-fhir-transform",editUrl:"https://github.com/jembi/openhim-mediator-mapping/edit/master/docs/docs/samples/bahmni-fhir-transform.md",sidebar_label:"Bahmni to FHIR transformation",sidebar:"someSidebar",previous:{title:"DHIS2 Facility Lookup",permalink:"/openhim-mediator-mapping/docs/samples/dhis2-lookup"}},c=[{value:"Setup",id:"setup",children:[]},{value:"Config",id:"config",children:[]},{value:"Testing",id:"testing",children:[]},{value:"Outcome",id:"outcome",children:[]}],b={rightToc:c};function u(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},b,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"This sample endpoint demonstrates how to perform validation/transformation on an incoming Bahmni Patient object and construct a new output object as a FHIR Patient resource"),Object(o.b)("h2",{id:"setup"},"Setup"),Object(o.b)("p",null,"Before we can continue with the sample endpoint configuration, we need to ensure we have followed the ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"/openhim-mediator-mapping/docs/setup"}),"getting started")," steps so that we have a working version of the mapping mediator."),Object(o.b)("p",null,"Copy the ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/jembi/openhim-mediator-mapping/tree/master/samples/endpoints/bahmni"}),"bahmni")," directory to the ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/jembi/openhim-mediator-mapping/tree/master/endpoints"}),"endpoints")," directory."),Object(o.b)("p",null,"The server will require a restart for the new endpoint files to be initialized and the endpoint successfully created "),Object(o.b)("h2",{id:"config"},"Config"),Object(o.b)("p",null,"Below are the various endpoint configuration files that was copied into the ",Object(o.b)("inlineCode",{parentName:"p"},"endpoints/bahmni")," directory."),Object(o.b)(r.a,{defaultValue:"metadata",values:[{label:"Metadata",value:"metadata"},{label:"Constants",value:"constants"},{label:"Input Validation",value:"input-validation"},{label:"Input Mapping",value:"input-mapping"}],mdxType:"Tabs"},Object(o.b)(s.a,{value:"metadata",mdxType:"TabItem"},Object(o.b)(p.a,{url:"https://raw.githubusercontent.com/jembi/openhim-mediator-mapping/master/samples/endpoints/bahmni/constant.json",language:"json",mdxType:"ExternalContentSyntaxHighlighter"})),Object(o.b)(s.a,{value:"constants",mdxType:"TabItem"},Object(o.b)(p.a,{url:"https://raw.githubusercontent.com/jembi/openhim-mediator-mapping/master/samples/endpoints/bahmni/constant.json",language:"json",mdxType:"ExternalContentSyntaxHighlighter"})),Object(o.b)(s.a,{value:"input-validation",mdxType:"TabItem"},Object(o.b)(p.a,{url:"https://raw.githubusercontent.com/jembi/openhim-mediator-mapping/master/samples/endpoints/bahmni/constant.json",language:"json",mdxType:"ExternalContentSyntaxHighlighter"})),Object(o.b)(s.a,{value:"input-mapping",mdxType:"TabItem"},Object(o.b)(p.a,{url:"https://raw.githubusercontent.com/jembi/openhim-mediator-mapping/master/samples/endpoints/bahmni/constant.json",language:"json",mdxType:"ExternalContentSyntaxHighlighter"}))),Object(o.b)("h2",{id:"testing"},"Testing"),Object(o.b)("p",null,"Once all the relevant configuration has been completed and the endpoint has been successfully initialized on server start up, we can proceed with testing our ",Object(o.b)("inlineCode",{parentName:"p"},"bahmni")," endpoint by following the below steps."),Object(o.b)("p",null,"We will be using a basic ",Object(o.b)("inlineCode",{parentName:"p"},"curl")," command to send our request to the mapping mediator but any other client could be used to achieve the same result."),Object(o.b)("h4",{id:"step-1"},"Step 1"),Object(o.b)("p",null,"Create a file called ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/jembi/openhim-mediator-mapping/tree/master/samples/inputData/bahmniPatient.json"}),"data.json")," in any directory of your choosing. This file will contain the payload data we will be sending as part of our request"),Object(o.b)(p.a,{url:"https://github.com/jembi/openhim-mediator-mapping/tree/master/samples/inputData/bahmniPatient.json",language:"json",mdxType:"ExternalContentSyntaxHighlighter"}),Object(o.b)("h4",{id:"step-2"},"Step 2"),Object(o.b)("p",null,"execute the below command to send the curl request to your mapping mediator instance"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-curl"}),'curl -X POST -H "Content-Type: application/json" -H "Content-Length: 0" -d @data.json http://localhost:3003/bahmni\n')),Object(o.b)("h2",{id:"outcome"},"Outcome"),Object(o.b)("p",null,"Once the request has been successfully triggered and processed by the mapping mediator you should be getting a ",Object(o.b)("inlineCode",{parentName:"p"},"200")," response code back as well as the below response data."),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "some": "sample JSON"\n}\n')))}u.isMDXComponent=!0},154:function(e,t,n){"use strict";var a=n(1),i=(n(161),n(18),n(152),n(6)),o=n(0),r=n.n(o),s=n(162),p=n.n(s),l=n(155),m=n(171),c=function(e){function t(t){var n;return(n=e.call(this,t)||this).state={data:null,spinner:!0,url:t.url.replace("<VERSION>",t.version)},n}Object(i.a)(t,e);var n=t.prototype;return n.componentWillMount=function(){var e=this;p.a.get(this.state.url).then((function(t){t.data?e.setState({data:t.data,spinner:!1}):e.setState({data:null,spinner:!1})})).catch((function(t){console.error(t.toString()),e.setState({data:null,spinner:!1})}))},n.render=function(){return this.state.spinner?r.a.createElement("div",{className:"spinnerContainer"},r.a.createElement("div",{id:"loading"})):this.state.data?r.a.createElement(l.a,Object(a.a)({},l.b,{theme:m.a,code:this.state.data,language:""+this.props.language}),(function(e){var t=e.className,n=e.style,a=e.tokens,i=e.getLineProps,o=e.getTokenProps;return r.a.createElement("pre",{className:t,style:n},a.map((function(e,t){return r.a.createElement("div",i({line:e,key:t}),e.map((function(e,t){return r.a.createElement("span",o({token:e,key:t}))})))})))})):r.a.createElement("div",null,"File not found...")},t}(o.Component);t.a=c}}]);